{
    "collab_server" : "",
    "contents" : "# install packages\n#install.packages(\"gridExtra\")\n\n# library: always run this\nlibrary(\"readr\", lib.loc=\"~/R/win-library/3.3\")\nlibrary(\"data.table\")\nlibrary(dplyr)\nlibrary(utils)\nlibrary(gridExtra)\nlibrary(grid)\n\n# ==== functions =====\n# count the number of users\nHNMining.summaryData<-function(df){\n  # declare variables\n  ret <- data.frame(\"Name\"=character(), \"Value\" = character(), stringsAsFactors = FALSE)\n  \n  # count No. of the users\n  nUsers <- length(unique(df$Userid))\n  ret[nrow(ret)+1,] <- c(\"No. of users\", nUsers)\n  \n  # count No. of the games\n  nGames <- length(unique(df$Gameid))\n  ret[nrow(ret)+1,] <- c(\"No. of games\", nGames)\n  \n  # count No. of the exercises\n  nMatches <- nrow(df)\n  ret[nrow(ret)+1,] <- c(\"No. of exercises\", nMatches)\n  \n  # Period\n  dates <- range(df$Date,na.rm=TRUE)\n  ret[nrow(ret)+1,] <- c(\"First date\", format(dates[1], \"%Y-%m-%d\"))\n  ret[nrow(ret)+1,] <- c(\"Last date\", format(dates[2], \"%Y-%m-%d\"))\n  \n  # output\n  plot.new()\n  grid.draw(grid.table(ret))\n}\n\n\nHNMining.getUser_X<-function(df){\n  # create a table\n  table = data.table(df)# table1: table with less columns from source data\n  tUserFreq <- table[,.(.N), by=Userid] # do on all row, produce the count, and group by the first columns\n  #tUserFreq <- tUserFreq[order(N)]# table2: data groupeby users\n  return(tUserFreq)\n}\n# classify the users based on No. days of training\nHNMining.classifyNoDays<-function(vNoDays){\n  max <-length(vNoDays)\n  xseq = c(0,1,10,30,60,90,150,200,250,300)\n  xtext = c(\">0\",\">1\",\">10\",\">30\",\">60\",\">90\",\">150\",\">200\",\">250\",\">300\")\n  v_nUsers = rep(0,length(xseq))  \n  for(i in 1:max){\n    for(j in 1:length(xseq)){\n      if(vNoDays[i]>xseq[j])\n        v_nUsers[j] = v_nUsers[j]+1\n    }\n  }\n  return(v_nUsers)\n}\n\n# draw a bar for stats\nHNMining.barUsers_Days <-function(v_nUsers, draw=FALSE){\n  xtext = c(\">0\",\">1\",\">10\",\">30\",\">60\",\">90\",\">150\",\">200\",\">250\",\">300\")\n  xx <- barplot(v_nUsers, names.arg = xtext, main=\"No. of users by minimum training days dist.\", sub= subtitle, xlab=\"No. of training days\", ylab=\"No. of users\")\n  text(x = xx, y = v_nUsers, label = v_nUsers, pos = 3, cex = 0.8, col = \"blue\")\n  \n  return(xx)\n}\n\n\nHNMining.getUser_Days<-function(df, draw=FALSE){\n\n  table = data.table(\"Userid\" = df$Userid, \"Date\" = df$Date)# transform\n  table = unique(table)# filter duplicate\n  table1 = table[,.(N = .N,MIN = min (Date, na.rm=TRUE), MAX = max (Date, na.rm=TRUE)), by=Userid]\n  table1 = table1[, duration := difftime(MAX, MIN, units = \"days\")]\n  \n  return(table1)\n}\n\n\n\nHNMining.getUser_Matches<-function(tUserX, draw=FALSE){\n  vMatches = tUserX$N\n  if(draw){\n    vPlot = sort(copy(vMatches))\n    plot(vPlot, main=\"No. of users on the same no. of exercises dist.\",sub=subtitle, xlab=\"No. of exercises\", ylab=\"No. of users \")\n  }\n  return(vMatches)\n}\n\nHNMining.getRatioMatchDays<-function(vNoMatches, vNoDays){\n  \n  # Question: no. match by day\n  vRatioMatchDays <- vNoMatches/vNoDays\n  return(vRatioMatchDays)\n}\n# draw a bar from matches / days ratio\nHNMining.barUsers_Ratio <-function(vRatioMatchDays, draw=FALSE, save=FALSE){\n  xseq = c(0,1,6,11,16)\n  xtext = c(\"0-1\",\"1-6\",\"6-11\",\"11-16\",\">16\")\n  #xseq = floor(seq(min(outcome),300, length.out = 10))\n  ind = findInterval(vRatioMatchDays,xseq)\n  ind = sort(ind)\n  fTable = table(ind)\n  fNames = as.numeric(names(fTable))\n  ybar = 1:length(xseq)\n  \n  for(i in 1:length(xseq)){\n    ybar[i] = 0\n    if(i %in% fNames){\n      ybar[i] <- fTable[match(i, fNames)]\n    }\n  }\n  \n  if(draw){\n    xx <- barplot(ybar, names.arg = xtext, main=\"No. of users grouped by no. exercises per day dist.\", sub=subtitle, xlab=\"No. of exercises by day\", ylab=\"No. of users\")\n    text(x = xx, y = ybar, label = ybar, pos = 3, cex = 0.8, col = \"blue\")\n  }\n  \n  return(ybar)\n}\n\nHNMining.statProgram<-function(df, programId=-1, draw = FALSE){\n  setwd(\"D:/projects/Data Mining/GamePro\")\n  \n  if(draw){\n    subtitle = \"N = 5.2M obs., db = GamePro\"\n    pdf(paste(\"report/Programs/Program\",programId,\".pdf\"))\n  }\n  \n  HNMining.summaryData(df)\n  tUserX <-HNMining.getUser_X(df)\n  vNoDays<-HNMining.getUser_Days(df)\n  vNoMatches<-HNMining.getUser_Matches(tUserX)\n  vRatioMatchDays<-HNMining.getRatioMatchDays(vNoMatches, vNoDays$N)\n  ybar = HNMining.barUsers_Ratio(vRatioMatchDays)\n  \n  if(draw){\n    dev.off()  \n  }\n  \n  return(ybar)\n}\n\n# ==== end functions ======\n\nHNMining.main<-function(){\n  \n  dataP4 <- readRDS(\"data/dataP4.rds\")\n  dataP13 <- readRDS(\"data/dataP13.rds\")\n  dataP14 <- readRDS(\"data/dataP14.rds\")\n  \n  #HNMining.summaryData(data3)\n  # build 3 vectors\n  plot3Programs <- function(dataP4, dataP13, dataP14) {\n    \n    p4 = HNMining.statProgram(dataP4,\"4\")\n    p13 = HNMining.statProgram(dataP13,\"13\")\n    p14 = HNMining.statProgram(dataP14,\"14\")\n    # save\n    dataMatchRatio = cbind(p4,p13,p14)\n    # draw\n    xtext = c(\"0-1\",\"1-6\",\"6-11\",\"11-16\",\">16\")\n    ybar = rbind(p4,p13,p14)\n    xx <- barplot(ybar,col=c(\"darkblue\",\"red\",\"yellow\"),beside = TRUE, names.arg = xtext, legend.text = c(\"PRESCO\",\"Brain Injury\",\"Psychiatry\"), main=\"No. of users grouped by no. exercises per day dist.\", sub=\"N=5.7M obs., GamePro\", xlab=\"No. of exercises by day\", ylab=\"No. of users\")\n    text(x = xx, y = ybar, label = ybar, pos = 3, cex = 0.8, col = \"blue\")\n  }\n  HNMining.getNoDays3<-function(list){\n    p4 = list$p4$N\n    p13 = list$p13$N\n    p14 = list$p14$N\n    \n    return(list(\"p4\"=p4,\"p13\"=p13,\"p14\"=p14))\n  }\n  \n  HNMining.classifyNoDays3<-function(list){\n    p4 = list$p4$N\n    p13 = list$p13$N\n    p14 = list$p14$N\n    \n    cp4 = HNMining.classifyNoDays(p4)\n    cp13 = HNMining.classifyNoDays(p13)\n    cp14 = HNMining.classifyNoDays(p14)\n    \n    return(list(\"p4\"=cp4,\"p13\"=cp13,\"p14\"=cp14))\n  }\n  \n  HNMining.getPercent <- function(vNoDays, draw=FALSE) {\n    max = max(vNoDays)\n    percent = maply(vNoDays, function(x) x/max)\n    return(percent)\n  }\n  \n  HNMining.getPercent3 <- function(list, draw=FALSE){\n    p4 = list$p4\n    p13 = list$p13\n    p14 = list$p14\n    \n    pp4 = HNMining.getPercent(p4)\n    pp13 = HNMining.getPercent(p13)\n    pp14 = HNMining.getPercent(p14)\n    \n    return(list(\"p4\"=pp4,\"p13\"=pp13,\"p14\"=pp14))\n  }\n  # plot 3 Programs in percents\n  HNMining.plot3ProgramsPer<-function(list){\n      \n    p4 = list$p4\n    p13 = list$p13\n    p14 = list$p14\n    # save\n    #data = cbind(p4,p13,p14)\n    # draw\n    xtext = c(\">0\",\">1\",\">10\",\">30\",\">60\",\">90\",\">150\",\">200\",\">250\",\">300\")\n    ybar = rbind(p4,p13,p14)\n    xx <-\n      barplot(\n        ybar,\n        col = c(\"darkblue\", \"red\", \"yellow\"),\n        beside = TRUE,\n        names.arg = xtext,\n        legend.text = c(\"PRESCO\", \"Brain Injury\", \"Psychiatry\"),\n        main = \"Change of no. of users dist. by training days \",\n        sub = \"N=5.7M obs., GamePro\",\n        xlab = \"No. of minimum training day\",\n        ylab = \"No. of users (%)\"\n      )\n    #text(x = xx, y = ybar, label = percent(ybar), pos = 3, cex = 0.8, col = \"blue\")\n  }\n  \n  HNMining.getDiff <- function(vPer) {\n    return(abs(diff(vPer)))\n  }\n  \n  HNMining.getDiff3 <- function(listPer, draw=FALSE){\n    p4 = listPer$p4\n    p13 = listPer$p13\n    p14 = listPer$p14\n    \n    pp4 = HNMining.getDiff(p4)\n    pp13 = HNMining.getDiff(p13)\n    pp14 = HNMining.getDiff(p14)\n    \n    return(list(\"p4\"=pp4,\"p13\"=pp13,\"p14\"=pp14))\n  }\n  \n  # plot 3 Programs in percents\n  HNMining.plot3ProgramsDiff<-function(list){\n    \n    p4 = list$p4\n    p13 = list$p13\n    p14 = list$p14\n    # save\n    #data = cbind(p4,p13,p14)\n    # draw\n    xtext = c(\"0-1\",\"1-10\",\"10-30\",\"30-60\",\"60-90\",\"90-150\",\"150-200\",\"200-250\",\"250-300\")\n    ybar = rbind(p4,p13,p14)\n    xx <-\n      barplot(\n        ybar,\n        col = c(\"darkblue\", \"red\", \"yellow\"),\n        beside = TRUE,\n        names.arg = xtext,\n        legend.text = c(\"PRESCO\", \"Brain Injury\", \"Psychiatry\"),\n        main = \"Percentage of users dist. by training days \",\n        sub = \"N=5.7M obs., GamePro\",\n        xlab = \"No. of training days\",\n        ylab = \"No. of users (%)\"\n      )\n    #text(x = xx, y = ybar, label = percent(ybar), pos = 3, cex = 0.8, col = \"blue\")\n  }\n}",
    "created" : 1513608762092.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "93|58|98|0|\n",
    "hash" : "90838815",
    "id" : "BEDD1A4A",
    "lastKnownWriteTime" : 1513698982,
    "last_content_update" : 1513698982790,
    "path" : "D:/projects/Data Mining/GamePro/R/statProgram.R",
    "project_path" : "R/statProgram.R",
    "properties" : {
        "docOutlineSize" : "175.32285873273258",
        "docOutlineVisible" : "1"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}